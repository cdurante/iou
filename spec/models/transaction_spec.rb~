require 'spec_helper'

describe Transaction do

  before do
	 @user1=User.new(name: "Example User1", email: "user1@example.com",password: "foobar" , password_confirmation: "foobar")
	 @user2=User.new(name: "Example User2", email: "user2@example.com",password: "foobar" , password_confirmation: "foobar")
	 @transaction=Transaction.new(user_id: @user1.id, debtor_id: @user2.id, name: "Transaction", amount: 21.30, paid: false, description: "This is an example description")
  end  

  subject { @transaction }

  it { should respond_to(:name) }
  it { should respond_to(:amount) }
  it { should respond_to(:friends) }
  it { should respond_to(:description) }
  it { should be_valid }

  describe "when user_id is not present" do
    before { @transaction.user_id = nil }
    it { should_not be_valid }
  end

 describe "when user_id is not present" do
    before { @transaction.user_id = nil }
    it { should_not be_valid }
  end

 describe "when debtor_id is not present" do
    before { @transaction.debtor_id = nil }
    it { should_not be_valid }
  end

  describe "with blank name" do
    before { @transaction.name = "" }
    it { should_not be_valid }
  end

  describe "with content that is too long" do
    before { @transaction.content = "a" * 141 }
    it { should_not be_valid }


  end


# creating a new micropost, should appear under collections
# when user 2 creates a new micropost, it should show under user 1's debts

#user 1  click pay up, transaction.paid should equal true
# user2 click delete, it should delete transaciton

end
